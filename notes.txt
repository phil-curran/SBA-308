assignments:
ass.1, due 1/25/2023
ass.2, due 2/27/2023 
ass.3, due 11/15/3156



learner 1: 125
ass1: 47 / 50 = submitted 1/25 ON TIME
ass2: 125 / 150 = submitted 2/12 ON TIME
ass3: 400 / 500 = submitted 1/25 ON TIME

learner 2: 132
ass1: 39 / 50 = submitted 1/24 ON TIME
ass2: 140 / 150 = submitted 3/07 LATE
ass3: no submission


const dateConverter = (string) => {
  return new Date(string);
};

const turnedInOnTime = (due, submitted) => {
  return dateConverter(submitted) <= dateConverter(due) ? true : false;
};

let a = turnedInOnTime('2024-2-1', '2024-1-1');





alternate strategy:
class constructor for student info
iterate through list of students
create new student object with class constructor
class constructor itself either has functions or calls functions that set the values as the object is constructed


// helper function: get assignment by assignment_id as object for comparison

const getAssignmentInfo = (id) => {
	return AssignmentGroup.assignments.find((assignment) => {
		return assignment.id === id;
	});
};




// main function: build student info
// takes one of the students ids
const buildStudentInfo = (studentIdNumber) => {
	console.log(studentIdNumber);

	// create empty student object
	let student = {};

	// add student id to student object:
	student.id = studentIdNumber;
	console.log(student);

	// uses the getStudentGrades function to get an array of student submissions
	// returns array of objects
	let studentGrades = getStudentGrades(studentIdNumber);
	console.log(studentGrades);

	// iterate through array of student assignments
	studentGrades.forEach((assignment) => {

	// for each assignment, use getAssignmentInfo function to get assignment details
	// returns an assigment object
	let tempAssignment = getAssignmentInfo(assignment.assignment_id);

	// compare the student assignment to the assignment parameters
	if (assignment.submitted_at < assignmentDetails.due_at) {
		earnedpoints += assignment.score;
		possiblepoints += assignmentDetails.points_possible;
		student[assignment.assignment_id] = earnedPoints / possiblePoints; 
	}

	});
};


// run the program

// instantiate the result variable
let result = [];

// call the main function
buildStudentInfo(studentList);

// return the result
console.log(result);

























